@model FleetPrimeTestUI.Util.PaginatedList<ExceptionAPI.Data.WasteManagementEventEntity>

@{
    var pstTimeZone = TimeZoneInfo.FindSystemTimeZoneById("Pacific Standard Time");
    ViewData["Title"] = "List Event";
}

<br />
<br />
<br />
<h2>@ViewData["Title"]</h2>

<div>
    <h4>List of all events received from FleetPrime API</h4>
    <hr />
    <form asp-action="Index" method="get" autocomplete="off" class="form-inline">
        <div class="form-actions no-color">
            <p>
                Find by TransactionId: <input type="text" class="form-control" style="width:300px" name="SearchString" value="@ViewData["currentFilter"]" />
                <input type="submit" value="Search" class="btn btn-default" /> |
                <a asp-action="Index">Back to Full List</a>
            </p>
        </div>
    </form>
    <table class="table">
        <thead>
            <tr>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">DateTime</a>
                </th>
                <th>
                    TransactionId
                </th>
                <th>
                    Vin
                </th>
                <th>
                    AccountId
                </th>
                <th>
                    Notes
                </th>
                <th>
                    EventType
                </th>
                <th>
                    ExceptionType
                </th>
                <th>
                    VideoStatus
                </th>
                <th>

                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                <td>
                    <span data-date="@TimeZoneInfo.ConvertTime(item.DateTime, pstTimeZone ,TimeZoneInfo.Utc)">@Html.DisplayFor(modelItem => item.DateTime)</span>
                </td>
                <td>
                    @Html.ActionLink(item.TransactionId, "Details", "WasteManagementEventList", new { transactionId = item.TransactionId })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Vin)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AccountId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ExceptionDetails.Notes)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EventType)
                </td>
                <td>
                    @if (item.EventType.Equals("WASTE_MANAGEMENT_ACCEPT"))
                    {
                        <span>ACCEPT</span>
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.ExceptionDetails.Type)
                    }

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VideoStatus)
                </td>
                <td>
                    <a href="@(ViewData["FleetprimeAwareUrl"]+item.EventId)" target="_self">Details</a>
                </td>
            </tr>
            }
        </tbody>
    </table>

    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-page="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-page="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
        Next
    </a>
</div>
<div>
</div>